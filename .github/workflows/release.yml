on:
  workflow_dispatch:
    inputs:
      publish:
        description: "True to publish release to git, vpm. if false, this creates release asset only"
        type: boolean
        required: false
      publish-page:
        description: "True to Publish page even if publish is false"
        type: boolean
        required: false

env:
  CREATOR_PKG_ROOT: "Packages/com.anatawa12.vpm-package-auto-installer.creator"
  PKG_NAME: com.anatawa12.vpm-package-auto-installer.creator
  ACTIONS_WORK_DIR: build
  PAGES_WORK_DIR: build/pages

concurrency:
  group: publish
  cancel-in-progress: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    environment: ${{ inputs.publish && 'master-branch' || '' }}
    outputs:
      version: ${{ steps.update-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with: 
          submodules: recursive
          token: ${{ inputs.publish && secrets.MASTER_GITHUB_PAT || github.token }}
      - uses: anatawa12/something-releaser@v2
      - uses: snow-actions/git-config-user@v1.0.0
      - name: Check version is Snapshot
        run: |
          if ! [[ "$(get-version)" = *-SNAPSHOT ]]; then
            echo 'VERSION IS NOT SNAPSHOT' >&2
            exit 1
          fi

      - name: Update Version Name
        id: update-version
        run: |
          set-version "$(version-unsnapshot "$(get-version)")"
          echo "VERSION=$(get-version)" >> $GITHUB_ENV
          echo "version=$(get-version)" >> $GITHUB_OUTPUT

      - name: Commit & tag version
        if: ${{ inputs.publish }}
        run: |
          git commit -am "$VERSION"
          git tag "v$VERSION"

      - name: Prepare build folder
        run: mkdir "$ACTIONS_WORK_DIR"

      - name: Build Installer dll
        run: ./building/build.sh build_dll

      - name: Create Template unitypackage
        uses: anatawa12/sh-actions/create-unitypackage@master
        with:
          output-path: ${{ env.ACTIONS_WORK_DIR }}/installer-template.unitypackage
          package-path: Assets/com.anatawa12.vpm-package-auto-installer

      - uses: actions/upload-artifact@v3
        with:
          name: installer-template
          path: ${{ env.ACTIONS_WORK_DIR }}/installer-template.unitypackage

      - name: Build VPM release
        run: |
          # add to creator unity package
          cp "$ACTIONS_WORK_DIR/installer-template.unitypackage" "$CREATOR_PKG_ROOT/installer-template.unitypackage.bytes"
          cp "building/installer-template.unitypackage.bytes.meta" "$CREATOR_PKG_ROOT/"
          # create zip file
          pushd "$CREATOR_PKG_ROOT"
            zip -r "$GITHUB_WORKSPACE/$ACTIONS_WORK_DIR/$PKG_NAME-$VERSION.zip" .
          popd

      - uses: actions/upload-artifact@v3
        with:
          name: vpm-package
          path: ${{ env.ACTIONS_WORK_DIR }}/${{ env.PKG_NAME }}-${{ env.VERSION }}.zip

      - name: Create Installer unitypackage
        shell: bash
        run: |
          # create creator installer unity package
          export USE_LOCAL_PREBUILT=1
          node creator/creator.mjs building/config.json "$ACTIONS_WORK_DIR/installer-creator.unitypackage"

      - uses: actions/upload-artifact@v3
        with:
          name: installer-creator
          path: ${{ env.ACTIONS_WORK_DIR }}/installer-creator.unitypackage

      - name: Publish Release
        if: ${{ inputs.publish }}
        run: |
          git push && git push origin "v$VERSION"

      - name: Create Pages folder
        shell: bash
        run: |
          mkdir "$PAGES_WORK_DIR"
          cp "$ACTIONS_WORK_DIR/installer-template.unitypackage" "$PAGES_WORK_DIR/"
          cp creator/index.html "$PAGES_WORK_DIR/"
          cp creator/creator.mjs "$PAGES_WORK_DIR/"

      - uses: actions/upload-artifact@v3
        with:
          name: pages-artifact
          path: ${{ env.PAGES_WORK_DIR }}

      - name: publish release to github
        if: ${{ inputs.publish }}
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          sleep 1
          # upload release assets
          gh release create "v$VERSION" \
            "$ACTIONS_WORK_DIR/installer-creator.unitypackage" \
            "$ACTIONS_WORK_DIR/installer-template.unitypackage" \
            "$ACTIONS_WORK_DIR/$PKG_NAME-$VERSION.zip" \
            "$CREATOR_PKG_ROOT/package.json" \
            "creator/creator.mjs" \

      - name: prepare next release & push
        if: ${{ inputs.publish }}
        run: |
          VERSION="$(version-next "$(get-version)")"
          set-version "$(version-snapshot "$VERSION")"
          git commit -am "prepare for next version: $VERSION"
          git push && git push --tags

  publish-vpm:
    uses: anatawa12/vpm.anatawa12.com/.github/workflows/update-package.yml@master
    if: inputs.publish
    needs: create-release
    with:
      version: ${{ needs.create-release.outputs.version }}
      environment: vpm.anatawa12.com
    secrets:
      TOKEN: ${{ secrets.VPM_GITHUB_PAT }}

  publish-pages:
    runs-on: ubuntu-latest
    if: inputs.publish || inputs.publish-page
    needs: create-release
    steps:
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
      - uses: snow-actions/git-config-user@v1.0.0
      - uses: actions/download-artifact@v3
        with:
          name: pages-artifact
      - name: publish github pages
        shell: bash
        run: |
          git add .
          git commit -m "update"
          git push
